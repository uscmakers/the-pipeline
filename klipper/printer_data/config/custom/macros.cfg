# WARNING: DO NOT EDIT THIS FILE
# To override settings from this file, you can copy and paste the relevant
# sections into your printer.cfg and change it there.

#####
# CONFIGURATION VARIABLES
#####

[gcode_macro ECHO_PIPELINE_VARS]
description: Echo PIPELINE variables to the console.
gcode:
  {% for var, value in printer["gcode_macro PIPELINE"].items() %}
    {action_respond_info(var ~ ": " ~ value)}
  {% endfor %}
  
[gcode_macro PIPELINE]
description: PIPELINE variable storage macro, will echo variables to the console when run.
# Configuration Defaults
# This is only here to make the config backwards compatible.
# Configuration should exclusively happen in printer.cfg.
variable_relative_extrusion: False
variable_preheat_extruder: True
variable_calibrate_bed_mesh: True
variable_nozzle_priming: "primeblob"
variable_start_print_park_in: "back"
variable_start_print_park_z_height: 50
variable_end_print_park_in: "back"
variable_pause_print_park_in: "back"
variable_macro_travel_speed: 150
gcode:
  ECHO_PIPELINE_VARS

#####
# GENERAL MACROS
#####

[gcode_macro MAYBE_HOME]
description: Only home unhomed axis
variable_is_kinematic_position_overriden: False
gcode:
  {% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
    RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
    G28
    SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
  {% else %}
    {% set axes = '' %}
    {% set isHomed = true %}
    {% set axesToHome = '' %}
    {% if params.X is defined %}
      {% set axes = axes ~ 'X ' %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'X ' %}
      {% endif %}
    {% endif %}
    {% if params.Y is defined %}
      {% set axes = axes ~ 'Y ' %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Y ' %}
      {% endif %}
    {% endif %}
    {% if params.Z is defined %}
      {% set axes = axes ~ 'Z ' %}
      {% if 'z' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Z ' %}
      {% endif %}
    {% endif %}
    {% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
      {% set axes = '' %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'X ' %}
      {% endif %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Y ' %}
      {% endif %}
      {% if 'z' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Z ' %}
      {% endif %}
    {% endif %}
    {% if isHomed is false %}
      M117 Homing {axesToHome}
      RESPOND MSG="Homing {axesToHome}"
      G28 {axesToHome}
    {% else %}
      RESPOND MSG="All requested axes already homed, skipping.."
    {% endif %}
  {% endif %}

# [gcode_macro PAUSE]
# description: Pauses the printer
# rename_existing: PAUSE_BASE
# variable_extrude: 1.5
# gcode:
#   SAVE_GCODE_STATE NAME=PAUSE_state
#   # Define park positions 
#   {% set E = printer["gcode_macro PAUSE"].extrude|float %}
#   {% set speed = printer["gcode_macro PIPELINE"].macro_travel_speed|float * 60 %}
#   # Calculate safe Z position
#   {% set max_z = printer.toolhead.axis_maximum.z|float %}
#   {% set act_z = printer.toolhead.position.z|float %}
#   {% if act_z < (max_z - 2.0) %}
#       {% set z_safe = 2.0 %}
#   {% else %}
#       {% set z_safe = max_z - act_z %}
#   {% endif %}
#   PAUSE_BASE
#   G91
#   # Retract
#   {% if printer.extruder.can_extrude|lower == 'true' %}
#     G1 E-{E} F2100
#   {% else %}
#     {action_respond_info("Extruder not hot enough")}
#   {% endif %}
#   # Move to park position
#   {% if "xyz" in printer.toolhead.homed_axes %}
#     G1 Z{z_safe} F900
#     _PARK LOCATION={printer["gcode_macro PIPELINE"].pause_print_park_in} X={printer["gcode_macro PIPELINE"].pause_print_park_x}
#   {% else %}
#     {action_respond_info("Printer not homed")}
#   {% endif %} 

# [gcode_macro RESUME]
# description: Resumes the print if the printer is paused.
# rename_existing: RESUME_BASE
# gcode:
#   {% set E = printer["gcode_macro PAUSE"].extrude|float %}
#   # Prime
#   {% if printer.extruder.can_extrude|lower == 'true' %}
#     G91
#     G1 E{E} F2100
#     G90
#   {% else %}
#     {action_respond_info("Extruder not hot enough")}
#   {% endif %}
#   RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
#   RESUME_BASE

[gcode_macro CANCEL_PRINT]
description: Cancels the printer
rename_existing: CANCEL_PRINT_BASE
gcode:
  END_PRINT
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  #SDCARD_RESET_FILE
  CANCEL_PRINT_BASE

[gcode_macro PRIME_LINE]
description: Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode:
  SAVE_GCODE_STATE NAME=prime_line_state
  {% set speed = printer["gcode_macro PIPELINE"].macro_travel_speed|float * 60 %}
  # Absolute positioning
  G90 
  # Absolute extrusion
  M82
  M117 Priming nozzle with prime line..
  RESPOND MSG="Priming nozzle with prime line.."
  # Lift 5 mm
  G1 Z5 F3000
  # Move to prime area
  G1 X{printer.toolhead.axis_minimum.x + 5} Y{printer.toolhead.axis_minimum.y + 10} F{speed}
  # Get ready to prime
  G1 Z0.3 F3000
  # Reset extrusion distance
  G92 E0
  # Prime nozzle 
  G1 Y{printer.toolhead.axis_minimum.y + 80} E16 F1200
  # Wipe
  G1 Y{printer.toolhead.axis_minimum.y + 100} F{speed}
  RESTORE_GCODE_STATE NAME=prime_line_state

#####
# START PRINT MACROS
# Call this from your slicer (custom g-code). 
# Read more here: https://rat-rig.github.io/V-CoreOS/#/slicers
#####

[gcode_macro PIPELINE_START_PRINT]
description: Start print procedure, use this in your Slicer.
gcode:
  _TURN_OFF_PUSHA_FAN ; turn off pusha fan
  G28 ; Home
  M117 Fixing Gantry Z-Tilt...
  RESPOND MSG="Fixing Gantry Z-Tilt..."
  Z_TILT_ADJUST
  G28 ; Home
  M117 Probing bed mesh...
  RESPOND MSG="Probing bed mesh..."
  BED_MESH_CALIBRATE
  G1 Z15.0 F6000 ; Move the gantry up 15mm

[gcode_macro PIPELINE_END_PRINT]
description: End print procedure, use this in your Slicer.
gcode:
  M117 Printing done!
  RESPOND MSG="Printing done!"
  M104 S0 ; turn off extruder
  M140 S0 ; turn off bed
  ; Retract the filament
  G92 E1
  G1 E0 F300
  G28 X ; Home both extruders
  G1 Y300 F1000 ; Move print bed to the front
  G1 Z250 F500 ; Move the gantry up 250mm
  M84 ; disable motors
  _TURN_ON_PUSHA_FAN; Turn on Pusha fan for cooling